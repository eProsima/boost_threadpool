include(CMakePackageConfigHelpers)
macro(write_config_file filename)
    file(WRITE ${filename}
            "
            # This file is automatically generated. Changes to it will be overwritten the
            # next time cmake runs.
            ")
    set(args ${ARGN})
    if(args)
        file(APPEND ${filename} "
            macro(find_dependency dep version)
                if (NOT \${dep}_FOUND)
                    set(exact_arg)
                    if(\${CMAKE_FIND_PACKAGE_NAME}_FIND_VERSION_EXACT)
                        set(exact_arg EXACT)
                    endif()
                    set(quiet_arg)
                    if(\${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY)
                        set(quiet_arg QUIET)
                    endif()
                    set(required_arg)
                    if(\${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)
                        set(required_arg REQUIRED)
                    endif()

                    find_package(\${dep} \${version} \${exact_arg} \${quiet_arg} \${required_arg})
                    if (NOT \${dep}_FOUND)
                        set(\${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE \"\${CMAKE_FIND_PACKAGE_NAME} could not be found because dependency \${dep} could not be found.\")
                    endif()
                    set(required_arg)
                    set(quiet_arg)
                    set(exact_arg)
                endif()
            endmacro()
            ")
        foreach(dep ${args})
            file(APPEND ${filename} "
	        find_dependency(Boost${dep} ${Boost_VERSION_STRING})
                ")
        endforeach()
    endif()

    file(APPEND ${filename} "
        include(\${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}Targets.cmake)

        ")
endmacro()
